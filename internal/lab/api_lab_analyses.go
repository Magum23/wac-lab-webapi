/*
 * Laboratory API
 *
 * Laboratory management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: xmagulam@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package lab

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type LabAnalysesAPI interface {

	// internal registration of api routes
	addRoutes(routerGroup *gin.RouterGroup)

	// CreateLabAnalysis - Create a new laboratory analysis
	CreateLabAnalysis(ctx *gin.Context)

	// DeleteLabAnalysis - Delete laboratory analysis by ID
	DeleteLabAnalysis(ctx *gin.Context)

	// GetLabAnalysis - Get all laboratory analyses
	GetLabAnalysis(ctx *gin.Context)

	// GetLabAnalysisById - Get laboratory analysis by ID
	GetLabAnalysisById(ctx *gin.Context)

	// UpdateLabAnalysis - Update laboratory analysis by ID
	UpdateLabAnalysis(ctx *gin.Context)
}

// partial implementation of LabAnalysesAPI - all functions must be implemented in add on files
type implLabAnalysesAPI struct {
}

func newLabAnalysesAPI() LabAnalysesAPI {
	return &implLabAnalysesAPI{}
}

func (t *implLabAnalysesAPI) addRoutes(routerGroup *gin.RouterGroup) {
	routerGroup.Handle(http.MethodPost, "/lab/:laboratoryId/lab-analysis", t.CreateLabAnalysis)
	routerGroup.Handle(http.MethodDelete, "/lab/:laboratoryId/lab-analysis/:analysisId", t.DeleteLabAnalysis)
	routerGroup.Handle(http.MethodGet, "/lab/:laboratoryId/lab-analysis", t.GetLabAnalysis)
	routerGroup.Handle(http.MethodGet, "/lab/:laboratoryId/lab-analysis/:analysisId", t.GetLabAnalysisById)
	routerGroup.Handle(http.MethodPut, "/lab/:laboratoryId/lab-analysis/:analysisId", t.UpdateLabAnalysis)
}
